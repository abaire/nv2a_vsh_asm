name: Build

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/**'
  pull_request:
    paths-ignore:
      - '.github/**'
      - '!.github/workflows/**'
      - 'README.md'
  release:
    types: [published]

jobs:
  package:
    name: Package source and wheel distributions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools wheel
      - name: Build sdist
        run: python setup.py sdist
      - name: Generate ANTLR
        run: python setup.py antlr build
      - name: Build wheels
        run: python setup.py antlr bdist_wheel
      - uses: actions/upload-artifact@v2
        with:
          name: source
          path: dist/*.tar.gz
      - uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*.whl

      - uses: pypa/gh-action-pypi-publish@master
        if: github.event_name == 'release' && github.event.release.prerelease
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Fake release
        if: github.event_name == 'release' && !github.event.release.prerelease
        run: echo "RELEASE!"
#      - uses: pypa/gh-action-pypi-publish@master
#        if: "!github.event.release.prerelease"
#        with:
#          user: __token__
#          password: ${{ secrets.TESTPYPI_API_TOKEN }}
#          repository_url: https://test.pypi.org/legacy/

  # upload_pypi:
  #   needs: [build_wheels, build_sdist, BuildWindows, BuildUbuntu, BuildDocker, BuildMacos]
  #   name: Upload Python distribution to PyPI
  #   runs-on: ubuntu-latest
  #   # upload to PyPI on every tag starting with 'v'
  #   if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: source
  #         path: dist
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: wheels
  #         path: dist
  #     - uses: pypa/gh-action-pypi-publish@master
  #       with:
  #         user: __token__
  #         password: ${{ secrets.PYPI_TOKEN }}
